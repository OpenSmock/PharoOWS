Object subclass: #QGISClient	instanceVariableNames: 'host port endpoint client capabilities'	classVariableNames: ''	package: 'QGIS-Pharo-Client'!!QGISClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 16:28'!layers	^QGISLayer fromXMLList:		((self capabilities document descendantElementsNamed: 'Layer') first 			 descendantElementsNamed: 'Layer')! !!QGISClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 17:25'!capabilities^self subclassResponsibility ! !!QGISClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 15:05'!isRunning	^ '*http://www.opengis.net/ogc*' match:		  (self client get: self baseUrl)! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:44'!port	^ port ifNil: [ port := 80 ]! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:44'!host	^ host ifNil: [ host := 'localhost' ]! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:44'!port: anObject	port := anObject! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:44'!host: anObject	host := anObject! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:54'!client: anObject	client := anObject! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 15:01'!baseUrl	| baseUrl |	baseUrl ifNil: [ 		baseUrl := 'http://' , self host , ':' , self port asString		           ,		           (self endpoint ifNil: [ '' ] ifNotNil: [ :e | '/' , e  ]) ].	^ baseUrl! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:53'!endpoint	^ endpoint! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:55'!client	client ifNil:[client := ZnClient new].	^ client! !!QGISClient methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 14:53'!endpoint: anObject	endpoint := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!QGISClient class	instanceVariableNames: ''!!QGISClient class methodsFor: 'instance creation' stamp: 'EricLePors 10/13/2022 14:52'!new^self host:'localhost' port:80.! !!QGISClient class methodsFor: 'instance creation' stamp: 'EricLePors 10/13/2022 14:51'!host: aName port: aPort	| qc |	qc  := self basicNew.	qc		host: aName;		port: aPort;		yourself.	^ qc! !Object subclass: #QGISLayer	instanceVariableNames: 'xmlElement name title'	classVariableNames: ''	package: 'QGIS-Pharo-Client'!!QGISLayer methodsFor: 'parsing' stamp: 'EricLePors 10/13/2022 16:42'!parseElement	name := (self xmlElement elementAt:'Name') strings first.	title := (self xmlElement elementAt: 'Title') strings first.! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 16:26'!title	^ title! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 16:26'!name	^ name! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 16:26'!title: anObject	title := anObject! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 15:56'!xmlElement: anObject	xmlElement := anObject! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 15:56'!xmlElement	^ xmlElement! !!QGISLayer methodsFor: 'accessing' stamp: 'EricLePors 10/13/2022 16:26'!name: anObject	name := anObject! !!QGISLayer methodsFor: 'printing' stamp: 'EricLePors 10/13/2022 16:43'!printOn: aStream	super printOn: aStream.	aStream nextPutAll: ' <'.	aStream nextPutAll: self name.	aStream nextPutAll: '>'.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!QGISLayer class	instanceVariableNames: ''!!QGISLayer class methodsFor: 'instance creation' stamp: 'EricLePors 10/13/2022 15:51'!fromXMLList: aList^aList collect: [ :e | self fromXMLLayer: e ].! !!QGISLayer class methodsFor: 'instance creation' stamp: 'EricLePors 10/13/2022 15:56'!fromXMLLayer: aXMLElement	| tmp |	tmp := self new.	tmp xmlElement: aXMLElement.	tmp parseElement.	^ tmp! !Object subclass: #QGISTile	instanceVariableNames: 'bounds form'	classVariableNames: ''	package: 'QGIS-Pharo-Client'!QGISTile subclass: #QGISTMSTile	instanceVariableNames: 'x y z'	classVariableNames: ''	package: 'QGIS-Pharo-Client'!Object subclass: #QGISView	instanceVariableNames: 'bounds tiles crs'	classVariableNames: ''	package: 'QGIS-Pharo-Client'!!QGISView methodsFor: 'updating' stamp: 'EricLePors 10/13/2022 17:07'!update: aRectangle! !QGISClient subclass: #QGISWMSClient	instanceVariableNames: ''	classVariableNames: ''	package: 'QGIS-Pharo-Client'!!QGISWMSClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 17:31'!capabilities	| url xml |	self isRunning ifFalse: [ self error: 'Server is not running' ].	capabilities ifNil: [ 		url := self baseUrl , '&REQUEST=GetCapabilities'.		xml := self client get: url.		capabilities := (XMLDOMParser parse: xml) document ].	^ capabilities! !!QGISWMSClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 17:27'!baseUrl	| baseUrl |	baseUrl ifNil: [ 		baseUrl := 'http://' , self host , ':' , self port asString		           ,		           (self endpoint ifNil: [ '' ] ifNotNil: [ :e | '/' , e ]).		baseUrl := baseUrl, '?SERVICE=WMS'		].	^ baseUrl! !!QGISWMSClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 17:58'!map: aLayerList bounds: aBounds size: aSize coordinates: aCoordinates	| layerList layerListWs url bbox img |	self isRunning ifFalse: [ self error: 'Server is not running' ].	layerList := aLayerList collect: [ :e | e asString ].	layerListWs := String new writeStream.	layerList		do: [ :e | layerListWs nextPutAll: e ]		separatedBy: [ layerListWs nextPut: $, ].	bbox := aBounds origin x printString , ','	        , aBounds origin y printString , ','	        , aBounds corner x printString , ','	        , aBounds corner y printString.	url := self baseUrl , '&VERSION=1.3.0&REQUEST=GetMap&LAYERS='	       , layerListWs contents , '&BBOX=' , bbox , '&CRS='	       , aCoordinates , '&WIDTH=' , aSize x printString, '&HEIGHT=' , aSize y printString.	img := self client get: url.	^ Form fromBinaryStream: img readStream.! !!QGISWMSClient methodsFor: 'api' stamp: 'EricLePors 10/13/2022 17:52'!map: aLayerList bounds: aBounds size: aSize epsg: aEPSGCoordinates	^ self		  map: aLayerList		  bounds: aBounds		  size: aSize		  coordinates: 'EPSG:' , aEPSGCoordinates! !